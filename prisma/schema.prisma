generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  username    String       @unique
  email       String       @unique
  password    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  projects    Project[]
  resetTokens ResetToken[]
}

model ResetToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Project {
  id          String   @id @default(uuid())
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String?
  description String?
  icon        String?
  labels      Label[]
  user        User?    @relation(fields: [userId], references: [id])
}

model Label {
  id        String         @id @default(uuid())
  name      String
  width     Float
  height    Float
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  projectId String?
  project   Project?       @relation(fields: [projectId], references: [id])
  elements  LabelElement[]
}

model LabelElement {
  id         String   @id @default(uuid())
  type       String
  x          Float
  y          Float
  width      Float?
  height     Float?
  value      String?
  color      String?
  rotation   Float?   @default(0)
  labelId    String
  properties Json?    @default("{}")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  fontSize   Float?
  label      Label    @relation(fields: [labelId], references: [id], onDelete: Cascade)
}
